import cv2
import sys
from PyQt5.QtWidgets import QWidget, QLabel, QApplication, QVBoxLayout, QGridLayout
from PyQt5.QtCore import QThread, Qt, pyqtSignal, pyqtSlot
from PyQt5.QtGui import QImage, QPixmap


class Thread(QThread):
    changePixmap = pyqtSignal(QImage)
    width = 0
    height = 0

    def run(self):
        cap = cv2.VideoCapture("movie1.mp4")
        Thread.width = cap.get(cv2.CAP_PROP_FRAME_WIDTH)
        Thread.height = cap.get(cv2.CAP_PROP_FRAME_HEIGHT)
        while True:
            ret, frame = cap.read()
            if ret:
                rgbImage = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                h, w, ch = rgbImage.shape
                bytesPerLine = ch * w
                convertToQtFormat = QImage(rgbImage.data, w, h, bytesPerLine, QImage.Format_RGB888)
                p = convertToQtFormat.scaled(Thread.width / 4, Thread.height / 4, Qt.KeepAspectRatio)
                self.changePixmap.emit(p)

class Thread2(QThread):
    changePixmap2 = pyqtSignal(QImage)
    width = 0
    height = 0
    def run(self):
        cap = cv2.VideoCapture("movie2.mp4")
        Thread2.width = cap.get(cv2.CAP_PROP_FRAME_WIDTH)
        Thread2.height = cap.get(cv2.CAP_PROP_FRAME_HEIGHT)
        while True:
            ret, frame = cap.read()
            if ret:
                rgbImage2 = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                h, w, ch = rgbImage2.shape
                bytesPerLine2 = ch * w
                convertToQtFormat2 = QImage(rgbImage2.data, w, h, bytesPerLine2, QImage.Format_RGB888)
                p2 = convertToQtFormat2.scaled(Thread2.width / 4, Thread2.height / 4, Qt.KeepAspectRatio)
                self.changePixmap2.emit(p2)

class App(QWidget):
    def __init__(self):
        super().__init__()
        self.gridbox = QVBoxLayout()
        self.setWindowTitle("1")
        # self.resize(1800, 1200)
        self.label = QLabel(self)
        self.label.resize(640, 480)
        self.label2 = QLabel(self)
        self.label2.resize(640, 480)
        self.setLayout(self.gridbox)
        self.gridbox.addWidget(self.label)
        self.gridbox.addWidget(self.label2)
        self.initUI()
        # self.setImage()


    def setImage(self, image):
        self.label.setPixmap(QPixmap.fromImage(image))

    @pyqtSlot(QImage)
    def setImage2(self, image):
        self.label2.setPixmap(QPixmap.fromImage(image))

    def initUI(self):
        # # self.gridbox.addWidget(self.label)
        th = Thread(self)
        th.changePixmap.connect(self.setImage)
        th.start()
        th2 = Thread2(self)
        th2.changePixmap2.connect(self.setImage2)
        th2.start()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    ex.show()
    # ex2.show()
    sys.exit(app.exec_())



